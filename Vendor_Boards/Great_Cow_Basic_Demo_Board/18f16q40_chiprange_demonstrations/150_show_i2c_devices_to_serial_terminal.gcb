'''
'''  This demonstration shows the I2C devices attached the microcontroller, this program support the Microchip I2C module.
'''
'''  I2C device required a data bus and a clock bus, devices also required an input voltage and 0v.
'''   I2C data bus is connected to Port as shown below.
'''   I2C clock bus is connected to Port as shown below.
'''   Serial output is connected, as shown below
'''
'''  Connect your IC2 devices and see the results on the serial terminal.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.02
'''@date    02/01/2022
' ----- Configuration

'Chip Settings.
#CHIP 18F16Q40, 16
#OPTION EXPLICIT

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.6.2
    'PinManager data: Not available (3)
    'Generated for 18f16q40
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18f16q40

    Sub InitPPS

            'Module: I2C1
            RB4PPS = 0x0022    'SDA1 > RB4
            I2C1SDAPPS = 0x000C    'RB4 > SDA1 (bi-directional)
            I2C1SCLPPS = 0x000E    'RB6 > SCL1
            RB6PPS = 0x0021    'SCL1 > RB6 (bi-directional)
            'Module: UART pin directions
            Dir PORTC.6 Out    ' Make TX1 pin an output
            'Module: UART1
            RC6PPS = 0x0010    'TX1 > RC6

    End Sub
    'Template comment at the end of the config file



'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----------------SW---------------
''-----------------------------------------
''
'' ------------------PORTB-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----SCL-----SDA------------------
''-----------------------------------------
''
'' -------------------PORTC----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    -----TX-SW-LED--LED-LED LED-ADC--
''-----------------------------------------
''

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDD1 PORTC.1
#DEFINE LEDD2 PORTC.2
#DEFINE LEDD3 PORTC.3
#DEFINE LEDD4 PORTC.4
#DEFINE LEDPORT LATC

Dir     LEDD1         Out
Dir     LEDD2         Out
Dir     LEDD3         Out
Dir     LEDD4         Out

#DEFINE POTENTIOMETER PORTC.0
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTC.5
Dir     SWITCHIN      In


'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING

' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTB.4
#DEFINE HI2C_CLOCK PORTB.6
'Initialise I2C - note for the I2C module the ports need to be set to OUT
Dir HI2C_DATA Out
Dir HI2C_CLOCK Out


'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte

Do

    HSerPrintCRLF
    HSerPrint "Hardware I2C "
    HSerPrintCRLF 2

    ' Now assumes Serial Terminal is operational
    HSerPrintCRLF
    HSerPrint "   "
    'Create a horizontal row of numbers
    For DeviceID = 0 To 15
        HSerPrint Hex(deviceID)
        HSerPrint " "
    Next

    'Create a vertical column of numbers
    For DeviceID = 0 To 255
        DisplayNewLine = DeviceID % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(DeviceID)
            If DisplayNewLine > 0 Then
                HSerPrint " "
            End If
        End If
        HSerPrint " "

        'Do an initial Start
        SI2CDiscovery ( DeviceID )

        If HI2CWaitMSSPTimeout <> TRUE Then

            'Did device fail to respond?
            If HI2CAckpollState = FALSE Then
                HSerPrint   Hex(deviceID)
            Else
                HSerPrint "--"
            End If
            'Do a stop.


        Else
            HSerPrint "! "
        End If

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2
    Wait 1 s
    Wait While SwitchIn = Off
Loop

' ----- Support methods.  Subroutines and Functions
