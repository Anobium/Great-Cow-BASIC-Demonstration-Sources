'''
'''  This demonstration shows the EEProm values on the Serial Terminal.
'''
''' This lesson will provide code for writing and reading a single byte onto
''' the on-board EEPROM. EEPROM is non-volatile memory, meaning that it does
''' not lose its value when power is shut off. This is unlike RAM, which will
''' lose its value when no power is applied. The EEPROM is useful for storing
''' variables that must still be present during no power.
''' It is also convenient to use if the entire RAM space is used up.
''' Writes and reads to the EEPROM are practically instant and are much faster
''' than program memory operations.

''' This will show the value of the EEPROM on the serial Terminal.
''' You can experiment by changing the variable 'Outdata' from Random function to a specific range.  Enjoy.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.01
'''@date    02/01/2022
' ----- Configuration

'Chip Settings.
#CHIP 18F16Q40
#OPTION EXPLICIT

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.6.2
    'PinManager data: Not available (3)
    'Generated for 18f16q40
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18f16q40

    Sub InitPPS

            'Module: UART pin directions
            Dir PORTC.6 Out    ' Make TX1 pin an output
            'Module: UART1
            RC6PPS = 0x0010    'TX1 > RC6

    End Sub
    'Template comment at the end of the config file



'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----------------SW---------------
''-----------------------------------------
''
'' ------------------PORTB-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----SCL-----SDA------------------
''-----------------------------------------
''
'' -------------------PORTC----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    -----TX-SW-LED--LED-LED LED-ADC--
''-----------------------------------------
''

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDD1 PORTC.1
#DEFINE LEDD2 PORTC.2
#DEFINE LEDD3 PORTC.3
#DEFINE LEDD4 PORTC.4
#DEFINE LEDPORT LATC

Dir     LEDD1         Out
Dir     LEDD2         Out
Dir     LEDD3         Out
Dir     LEDD4         Out

#DEFINE POTENTIOMETER PORTC.0
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTC.5
Dir     SWITCHIN      In


'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.
' Now assumes Serial Terminal is operational


Dim EEPromAddress, DisplayNewLine, Outdata, Indata  As Byte

Do Forever

    HSerPrintCRLF
    HSerPrint "EEPROM Test and Show first 256 bytes EEProm Results"
    HSerPrintCRLF 2


    Set LEDD1 Off
    Set LEDD2 Off


    HSerPrint "     "
    For EEPromAddress = 0 To 15
        HSerPrint Hex(EEPromAddress)
        HSerPrint " "
    Next

    For EEPromAddress = 0 To 255
        DisplayNewLine = EEPromAddress % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(EEPromAddress)
            HSerPrint ": "
        End If
        HSerPrint " "

        'Outdata = Random
        'Outdata = 0x55    'If you DON'T believe put your own value here!
        Outdata = 255 - EEPromAddress    'If you DON'T believe put your own value here!

        'Writes
        EPWrite ( EEPromAddress, Outdata )
        'Reads
        EPRead  ( EEPromAddress, Indata )

        If Outdata = Indata Then
            HSerPrint  Hex(Indata)
        Else
            HSerPrint  "??"
        End If

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of EEProm Program and Display"
    HSerPrintCRLF 2
    Set LEDD2 On
    Set LEDD1 On

    Wait While SwitchIn = Off
Loop
End
