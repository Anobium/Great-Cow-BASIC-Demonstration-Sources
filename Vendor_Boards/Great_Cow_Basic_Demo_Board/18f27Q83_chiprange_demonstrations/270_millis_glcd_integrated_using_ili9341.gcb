
'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9341 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, Ellipses and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''This has been tested using the hardware SPI option.
''':
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    03/01/2022
'''********************************************************************************

'Chip Settings
#CHIP 18F27Q83
#CONFIG MCLRE=On

#INCLUDE <glcd.h>

#DEFINE GLCD_TYPE GLCD_TYPE_ILI9341

    'Generated by PIC PPS Tool for Great Cow BASIC
    'PPS Tool version: 0.0.6.1
    'PinManager data: v1.79.0
    'Generated for 18F27Q83
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F27Q83

    Sub InitPPS
        'This #ifdef support the SPI hardware!!
        #ifdef ILI9341_hardwarespi
            'Module: SPI1
            RC5PPS = 0x0032    'SDO1 > RC5
            RC3PPS = 0x0031    'SCK1 > RC3
            SPI1SCKPPS = 0x0013    'RC3 > SCK1 (bi-directional)
        #endif

    End Sub
    'Template comment at the end of the config file


'Pin mappings for ILI9341
#DEFINE GLCD_DC porta.1
#DEFINE GLCD_CS porta.2
#DEFINE GLCD_RESET porta.3

'This is a PPS chip, so, needs to make the PPS match these assignments
'The following example is commented out intentionally
'#define GLCD_DI portc.4
#DEFINE GLCD_DO portc.5
#DEFINE GLCD_SCK portc.3

'Comment out the next line... but you MUST disable the PPS!!!
'#DEFINE ILI9341_hardwarespi

' ********************** MILLIS DEMO REALLY STARTS HERE ************************************************

#INCLUDE <millis.h>

' Define the LED Pin - Digital Pin 2
#DEFINE LED PORTA.0
' Flash rate in mS
#DEFINE LEDRate 1000
' Setup
' Make the LED Pin an Output
Dir LED Out
LED = 0

' declare working variables
Dim CurMs, LstMs As Word
' Main                    ' This loop runs over and over forever.
LstMs = 0
CurMs = 0

' ********************** GLCD DEMO REALLY STARTS HERE ************************************************

'GLCD selected extension font set. ASCII characters 31-254, the extended font uses 1358 bytes of program memory
#DEFINE GLCD_EXTENDEDFONTSET1
GLCDfntDefaultSize = 2

'GLCDCLS  supports GLCDBackground as default
'GLCDCLS  also support passing color parameter.
'GLCDCLS [color]
' optionally you can rotate the screen.
GLCDRotate ( Landscape_Rev )


'Available colors
'ILI9341_BLACK
'ILI9341_RED
'ILI9341_GREEN
'ILI9341_BLUE
'ILI9341_WHITE
'ILI9341_PURPLE
'ILI9341_YELLOW
'ILI9341_CYAN
'ILI9341_D_GRAY
'ILI9341_L_GRAY
'ILI9341_SILVER
'ILI9341_MAROON
'ILI9341_OLIVE
'ILI9341_LIME
'ILI9341_AQUA
'ILI9341_TEAL
'ILI9341_NAVY
'ILI9341_FUCHSIA

Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT As Byte

CCount = 31
Dim longNumber As Long
' max value = 4294967290
longNumber = 0
Dim wordNumber As Word
wordNumber = 0
byteNumber = 0



GLCDRotate ( Landscape_Rev )

GLCDDrawString (2, 1, "GCB",ILI9341_WHITE)
GLCDDrawString (50,1,"v9807",ILI9341_YELLOW)
GLCDDrawString (2, 18, "DrawStr",ILI9341_WHITE)

GLCDDrawString ( 2, 52, "Long:" )
GLCDDrawString ( 2, 70, "Word:" )
GLCDDrawString ( 2, 88, "Byte:" )

GLCDDrawString ( 128, 18, "Asc:"+"  " )

Box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_YELLOW
Box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

'center
Circle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 50, ILI9341_SILVER )
FilledEllipse( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 25, 25, ILI9341_D_GRAY  )

Line 0,  ILI9341_GLCD_HEIGHT-1 , ILI9341_GLCD_WIDTH/2 +100,  (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN
Line  0, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_GLCD_WIDTH/2 +100, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN

FilledBox 2,ILI9341_GLCD_HEIGHT/2+10,42,ILI9341_GLCD_HEIGHT/2+50, ILI9341_RED

oldfont = GLCDfntDefaultSize
GLCDfntDefaultSize = 3
GLCDDrawString ( 50, ILI9341_GLCD_HEIGHT - 30 , "ILI9341 Driver" , ILI9341_WHITE )

GLCDfntDefaultSize = 1
GLCDDrawString ( ILI9341_GLCD_WIDTH - 66, 2 , "Jan 2022" , ILI9341_WHITE )

#IFDEF ILI9341_HardwareSPI
    GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "HW SPI" , ILI9341_WHITE )
#ENDIF

#IFNDEF ILI9341_HardwareSPI
    GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9341_WHITE )
#ENDIF

'Revert the font size
GLCDfntDefaultSize = oldfont
GLCDForeground = ILI9341_WHITE
GLCDPrintLargeFont ( 100 , ILI9341_GLCD_HEIGHT - 60 , "Great Cow Basic" )

Do Forever

    CurMs = millis()

    If CurMs - LstMs >= LEDRate Then
        ' required Time has Elapsed

        ' So Toggle state of LED
        LED = !LED
        ' And Record Toggle Time
        LstMs = CurMs
    End If

    GLCDPrint ( 64 , 52, CurMs - LstMs)
    GLCDPrint ( 64 , 70, Pad( Str(wordnumber),5))
    GLCDPrint ( 64 , 88, Pad( Str(bytenumber),3))

    GLCDDrawChar(99, 18, CCount )
    'Draw a box around the Char below
    Box 98,18,117,42, ILI9341_WHITE

    GLCDDrawString ( 180, 18 , Pad( Str(CCount),3) )

    CCount++
    If CCount = 0 Then CCount = 31
    If CCount = 128 Then CCount = 192
    longNumber = longNumber + 7
    wordNumber = wordNumber + 3
    byteNumber++

Loop
