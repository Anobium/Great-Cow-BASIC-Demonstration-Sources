'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a GLCD demonstration to show colors and graphics primitives
'''--------------------------------------------------------------------------------------------------------------------------------
'''
'''This program shows use of hyperbole GCLD
'''
'''The program has been setup for a specific GLCD, an 18f MCU and PPS (for Hardware SPI) - but, you can use the main 'Graphics Main program' on any color GLCD.  Just change the configuration.
'''
'''@author  Giuseppe D'Elia
'''@licence GPL
'''@version 1.0
'''@date    9.5.19
'''********************************************************************************

    'Chip Settings.
    #chip 18F45k42, 64
    #config MCLRE = ON
    #option explicit
    #include <glcd.h>
    '
    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.25
    'PinManager data: Not available (3)
    'Generated for 18f25k42
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F45k42
    Sub InitPPS
        #ifdef ILI9341_hardwarespi
            'Module: SPI1
            SPI1SDIPPS = 0x0014     'RC4 > SDI1
            RC5PPS = 0x001F         'SDO1 > RC5
            RC3PPS = 0x001E         'SCK1 > RC3
            SPI1SCKPPS = 0x0013     'RC3 > SCK1 (bi-directional)
        #endif
    End Sub

    #define GLCD_TYPE GLCD_TYPE_ILI9341


'******************************************************************************************************
    'Setup the GLCD

    #define ILI9341_HardwareSPI

    'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
    #define GLCD_DC     portA.0   ' Data command/line
    #define GLCD_CS     portC.1   ' Chip select line
    #define GLCD_RESET  portC.0   ' Reset line
    #define GLCD_DO     portC.5   'GLCD MOSI connect to MCU SDO
    #define GLCD_SCK    portC.3   ' Clock Line
    Dir   GLCD_DC     OUT
    Dir   GLCD_CS     OUT
    Dir   GLCD_RESET  OUT
    Dir   GLCD_DO     OUT
    Dir   GLCD_SCK    OUT

    #define SPI_BAUD_RATE_REGISTER 2


    '******************************************************************************************************

    'Main program

    'setting random generetor seed
    #define    randomize_seed Timer2


    GLCDBackground = ILI9341_BLUE
    GLCDForeground = ILI9341_WHITE
    GLCDCLS(GLCDBackground)     'Clear screen


    Dim x_0, y_0, a_axis, b_axis, n_hyperboles  as word
    Dim n_color, ratio_ab, n_sets, Case_Choice as byte
    Dim ModeStp as byte
    Dim Counter as byte

    Table Colors as Word
        ILI9341_BLACK
        ILI9341_RED
        ILI9341_GREEN
        ILI9341_BLUE
        ILI9341_WHITE
        ILI9341_PURPLE
        ILI9341_YELLOW
        ILI9341_CYAN
        ILI9341_D_GRAY
        ILI9341_L_GRAY
        ILI9341_SILVER
        ILI9341_MAROON
        ILI9341_OLIVE
        ILI9341_LIME
        ILI9341_AQUA
        ILI9341_TEAL
        ILI9341_NAVY
        ILI9341_FUCHSIA
    End Table

'    Linecolour=ILI9341_white

    n_color=18
    ModeStp=2       '1 stop at first border encounter. 2 when all borders are encountered
    Case_Choice=8

do
    Select Case Case_Choice

    Case 1                      'single  x_aligned Hyperbole
      x_0=GLCD_WIDTH/4
      y_0=GLCD_HEIGHT/4
      a_axis=8
      b_axis=4
      hyperbole(x_0, y_0, a_axis, b_axis, 1, ModeStp)

    Case 2                      'single y_aligned Hyperbole
      x_0=GLCD_WIDTH/2
      y_0=GLCD_HEIGHT/2
      a_axis=8
      b_axis=4
      hyperbole(x_0, y_0, a_axis, b_axis, 2, ModeStp)

    Case 3                      'double x_aligned and y-aligned Hyperboles
      x_0=3*GLCD_WIDTH/4
      y_0=GLCD_HEIGHT/4
      a_axis=8
      b_axis=4
      hyperbole(x_0, y_0, a_axis, b_axis, 1, ModeStp)
      hyperbole(x_0, y_0, a_axis, b_axis, 2, ModeStp)

    Case 4                      'set of n_Hyperboles centered, x-aligned, Hyperboles
      n_hyperboles=200
      ratio_ab=1
      x_0=GLCD_WIDTH/2
      y_0=GLCD_HEIGHT/2
      ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 1, ModeStp)

    Case 5                      'set of n_Hyperboles centered, y-aligned, Hyperboles
      n_hyperboles=100
      ratio_ab=1
      x_0=GLCD_WIDTH/2
      y_0=GLCD_HEIGHT/2
      ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 2, ModeStp)

    Case 6                      'set of n_Hyperboles centered x-aligned and y_aligned Hyperboles
      n_hyperboles=200
      ratio_ab=2
      x_0=GLCD_WIDTH/2
      y_0=GLCD_HEIGHT/2
      ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 3, ModeStp)

    Case 7                      'four regularly distributed sets of n_Hyperboles x-aligned and y_aligned Hyperboles
      n_hyperboles=10
      ratio_ab=1
      n_sets=4
      for counter=1 to n_sets
        If counter=1 then
          x_0=GLCD_WIDTH/4
          y_0=GLCD_HEIGHT/4
        end if
        if counter=2 then
          x_0=3*GLCD_WIDTH/4
          y_0=GLCD_HEIGHT/4
        end if
        if counter=3 then
          x_0=GLCD_WIDTH/4
          y_0=3*GLCD_HEIGHT/4
        end if
        if counter=4 then
          x_0=3*GLCD_WIDTH/4
          y_0=3*GLCD_HEIGHT/4
        end if
        ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 3, ModeStp)
      Next

    Case 8                      'n_sets of randomly distributed n_Hyperboles x-aligned and y_aligned Hyperboles
      n_hyperboles=10
      ratio_ab=1
      n_sets=8
      for counter=1 to n_sets
        x_0=Random%240
        y_0=Random
        ScanHyperbole(x_0, y_0, ratio_ab,n_hyperboles, 3, ModeStp)
      next

    End Select

    wait 3 s

    GLCDCLS(GLCDBackground)

loop

sub ScanHyperbole(x0,y0, ratio_ab, n_hyperboles, type0, ModeStp)

    'Type=1 hyperbola aligned along x
    'Type=2 hyperbole aligned along y
    'Type=3 hyperbole aligned along x plus iperbole aligned along y

    Dim x0,y0,a_axis, b_axis, ind, n_hyperboles as word
    Dim color as Word
    Dim n_color as Byte
    Dim ratio_ab, type0, ModeStp as byte

    line(0,160,240,160,ili9341_red)
    line(120,0,120,320,ili9341_red)

    b_axis=0
    for ind=1 to n_hyperboles
      b_axis=b_axis+1
      a_axis=ratio_ab*b_axis
      readtable colors,ind%n_color+1,color
      if Type0=1 then
        hyperbole(x0, y0, a_axis, b_axis, 1, ModeStp, Color)
      else if Type0=2 then
          hyperbole(x0, y0, a_axis, b_axis, 2,ModeStp, Color)
      end if
      if type0=3 then
          hyperbole(x0, y0, a_axis, b_axis, 1, ModeStp, Color)
          hyperbole(x0, y0, a_axis, b_axis, 2, ModeStp, Color)
      end if
    next

end sub
