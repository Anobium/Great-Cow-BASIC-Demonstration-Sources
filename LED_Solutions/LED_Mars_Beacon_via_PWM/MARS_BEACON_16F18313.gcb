 '''A demonstration program for GCGB and GCB.
 '''--------------------------------------------------------------------------------------------------------------------------------
 '''This program ia a demonstration of a Simulated MARS Beacon for Experimental / RC Aircraft
 '''You should see it on the aircraft using four 3 Watt Cree XR-E LED's.
 '''Makes runway taxiing a lot safer for these smaller experimental aircraft.  And of course can be used on R/C Planes for a realistic looking beacon.
 '''We Suggest using less expensive 8-Pin Device such as 16F18313
 '''
 '''@author    EvanV on works of William Roth
 '''@licence   GPL
 '''@version   1.0
 '''@date     01.05.2021



 '''********************************************************************************

 ; ----- Configuration


  #chip 16F18313
    #option explicit


    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.6.2
    'PinManager data: v1.81.0
    'Generated for 16f18313
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16f18313

    Sub InitPPS

            'Module: CCP1
            RA2PPS = 0x000C    'CCP1 > RA2
            CCP1PPS = 0x0002    'RA2 > CCP1 (bi-directional)

    End Sub
    'Template comment at the end of the config file




   ' Adjust for Beacon Effect
   #define Max_Duty 120    '~50 %
   #define Flash_ON 110    ' ms
   #define Flash_OFF 110   ' ms
   #define Delay 20        ' ramp delay

 ; ----- Define Hardware settings
  #define LEDD1 PORTA.2
  Dir     LEDD1 OUT

 ; ----- Variables
   Dim Duty as Byte
   Duty = 10  'starting Value

 ; ----- Quick Command Reference:
  'A MARS Beacon simulation for your enjoyment. I originally written for Picaxe Basic for an Experimental Aircraft owner/ pilot who  uses it on his Airplane.
  'It passed U.S. Federal regulations and was approved by the FAA inspector who really liked it.
  'To get best performance on a breadboard, use a general purpose NPN transistor (2N3904. etc )  to drive a  5mm LED.
  'Recommend a 220 Ohm resistor from 5v to the collector to limit current and a series resistor of 3K3  from the PIC CCP pin to the transistor base.


 ; ----- Main body of program commences here.

  DO Forever


     ''' Ramp UP
     Do while duty  < Max_Duty
         Duty = Duty + 4
         HPWM 1,2, duty
         wait delay ms
     loop

     ''' Flash
     HPWM 1,2, 255
     Wait FLASH_ON Ms
     HPWM 1,2,max_duty
     Wait FLASH_OFF ms

     HPWM 1, 2, 255
     Wait FLASH_ON Ms
     HPWM 1, 2, max_duty
     Wait Flash_OFF ms

        'Ramp Dowm
     Do while duty  > 10
         Duty = Duty - 4
         HPWM 1,2, duty
         wait delay ms
     loop

  LOOP

  end

 ; ----- Support methods.  Subroutines and Functions

    ''' GCB Optimisation file

    'Optmise PWM.h
        #define USE_HPWMCCP1 TRUE
        #define USE_HPWMCCP2 FALSE
        #define USE_HPWMCCP3 FALSE
        #define USE_HPWMCCP4 FALSE

        #define USE_HPWM6 FALSE
        #define USE_HPWM7 FALSE

        #define USE_HPWM_TIMER2 TRUE
        #define USE_HPWM_TIMER4 FALSE
        #define USE_HPWM_TIMER6 FALSE

    'Optimise A-d.h
        'Standard family chips
        #define USE_AD0 FALSE
        #define USE_AD1 FALSE
        #define USE_AD2 FALSE
        #define USE_AD2 FALSE
        #define USE_AD3 FALSE
        #define USE_AD4 FALSE
        #define USE_AD5 FALSE
        #define USE_AD6 FALSE
        #define USE_AD7 FALSE
        #define USE_AD8 FALSE
        #define USE_AD9 FALSE
        #define USE_AD10 FALSE
        #define USE_AD11 FALSE
        #define USE_AD12 FALSE
        #define USE_AD13 FALSE
        #define USE_AD14 FALSE
        #define USE_AD15 FALSE
        #define USE_AD16 FALSE
        #define USE_AD17 FALSE
        #define USE_AD18 FALSE
        #define USE_AD19 FALSE
        #define USE_AD20 FALSE
        #define USE_AD21 FALSE
        #define USE_AD22 FALSE
        #define USE_AD23 FALSE
        #define USE_AD24 FALSE
        #define USE_AD25 FALSE
        #define USE_AD26 FALSE
        #define USE_AD27 FALSE
        #define USE_AD28 FALSE
        #define USE_AD29 FALSE
        #define USE_AD30 FALSE
        #define USE_AD31 FALSE
        #define USE_AD32 FALSE
        #define USE_AD33 FALSE
        #define USE_AD34 FALSE

        'Family of chips based on 16f1688x with ADCON3 register
        #define USE_ADA0 FALSE
        #define USE_ADA1 FALSE
        #define USE_ADA2 FALSE
        #define USE_ADA3 FALSE
        #define USE_ADA4 FALSE
        #define USE_ADA5 FALSE
        #define USE_ADA6 FALSE
        #define USE_ADA7 FALSE
        #define USE_ADB0 FALSE
        #define USE_ADB1 FALSE
        #define USE_ADB2 FALSE
        #define USE_ADB3 FALSE
        #define USE_ADB4 FALSE
        #define USE_ADB5 FALSE
        #define USE_ADB6 FALSE
        #define USE_ADB7 FALSE
        #define USE_ADC0 FALSE
        #define USE_ADC1 FALSE
        #define USE_ADC2 FALSE
        #define USE_ADC3 FALSE
        #define USE_ADC4 FALSE
        #define USE_ADC5 FALSE
        #define USE_ADC6 FALSE
        #define USE_ADC7 FALSE
        #define USE_ADD0 FALSE
        #define USE_ADD1 FALSE
        #define USE_ADD2 FALSE
        #define USE_ADD3 FALSE
        #define USE_ADD4 FALSE
        #define USE_ADD5 FALSE
        #define USE_ADD6 FALSE
        #define USE_ADD7 FALSE
        #define USE_ADE0 FALSE
        #define USE_ADE1 FALSE
        #define USE_ADE2 FALSE
