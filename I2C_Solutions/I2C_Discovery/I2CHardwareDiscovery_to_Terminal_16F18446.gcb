'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program searches for I2C devices and display their adresses to the attached PC terminal.
'''This program uses the hardware implementation of I2C and TWI for the Microchip and ATMEL microprocessors.  The microprocessor must have a suitable I2C or TWI module and the correct pullup resistors.
'''The hardware serial connections are shown in the program.
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    24/08/2019
'''********************************************************************

'Specify the Device you are compiling for - this board is the 16F18446
#CHIP 16F18446
'Great Cow BASIC simplifies the configuration by setting the frequency and the configuration for you.
'This option ensures that all variables are dimensioned in the user program.  See http://gcbasic.sourceforge.net/help/__option_explicit.html
#OPTION Explicit

'Set a constant.  The LED can be activated by driving the connected I/O line to GND, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
#DEFINE LEDOn  = 0
'Set a constant.  The LED can be de-activated by driving the connected I/O line to the supply voltage, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
#DEFINE LEDOff = 1

'Set a constant to refer to the LED.  RA2 is a Yellow LED called LED0 Edge connector, see section 3.3.1 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
#DEFINE LED0 porta.2
'Set LED as an output
Dir LED0 Out


'Set a constant to refer to the switch
#DEFINE Switch portc.2
'Set the switch as an input
Dir Switch In
'Enable weak pullup, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
WPUC2 = 1

'Setup the communication EUSART settings - do not need to do much with Great Cow BASIC
#DEFINE USART_BAUD_RATE 19200
#DEFINE USART_TX_BLOCKING


'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.19
'PinManager data: v1.65.2
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85

Sub InitPPS

    'Module: EUSART1
    'RB6 > RX1
    RX1DTPPS = 0x000E
    'TX1 > RB4
    RB4PPS = 0x000F

    'Module: MSSP1
    'SCL1 > RB7
    RB7PPS = 0x0013
    'RB7 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x000F
    'SDA1 > RB5
    RB5PPS = 0x0014
    'RB5 > SDA1 (bi-directional)
    SSP1DATPPS = 0x000D

End Sub
'Template comment at the end of the config file


' ----- Define Hardware settings
' Define I2C settings - CHANGE PORTS if required for your specific device.
'can be 400
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA  PORTB.5
#DEFINE HI2C_CLOCK PORTB.7
'I2C pins need to be input for SSP module when used on this type of Microchip PIC device
Dir HI2C_DATA In
Dir HI2C_CLOCK In
HI2CMode Master


' ----- Main body of program commences here.
' Now assumes Serial Terminal is operational
Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte
Wait 100 ms

Do
    HSerPrintCRLF
    HSerPrint "Hardware I2C "
    HSerPrintCRLF 2

    ' Now assumes Serial Terminal is operational
    HSerPrintCRLF
    HSerPrint "   "
    'Create a horizontal row of numbers
    For DeviceID = 0 To 15
        HSerPrint Hex(deviceID)
        HSerPrint " "
    Next

    'Create a vertical column of numbers
    For DeviceID = 0 To 255
        DisplayNewLine = DeviceID % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(DeviceID)
            If DisplayNewLine > 0 Then
                HSerPrint " "
            End If
        End If
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        If HI2CWaitMSSPTimeout <> TRUE Then

            'Send to address to device
            HI2CSend ( deviceID )

            'Did device fail to respond?
            If HI2CAckpollState = FALSE Then
                HI2CSend ( 0 )
                HSerPrint   Hex(deviceID)
            Else
                HSerPrint "--"
            End If

            'Do a stop.
            HI2CStop
        Else
            HSerPrint "! "
        End If

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2
    Wait 1 s
    Wait While switch = On
Loop

' ----- Support methods.  Subroutines and Functions
