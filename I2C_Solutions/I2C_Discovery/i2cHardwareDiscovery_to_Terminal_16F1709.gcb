'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program searches for I2C devices and display their adresses to the attached PC terminal.
'''This program uses the hardware implementation of I2C and TWI for the Microchip and ATMEL microprocessors.  The microprocessor must have a suitable I2C or TWI module.
'''The hardware serial connections are shown in the program.
'''
'''YOU MUST HAVE PULLS on THE CLOCK AND DATA LINES
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.2a
'''@date    6.9.2016
'''********************************************************************************

; ----- Configuration
  #chip 16F1709, 16
  #option explicit

  'Set the PPS for this solution.
  #startup InitPPS, 85

  Sub InitPPS
    UNLOCKPPS

    RXPPS=0x0D        'Pin RB5 source is an input for RX
    RB7PPS=0x14       'Pin RB7 source is TX/CK

    RB4PPS = 0x11     'RB4->MSSP:SDA
    RB6PPS = 0x10     'RB6->MSSP:SCL
    SSPDATPPS = 0x0C  'RB4->MSSP:SDA
    SSPCLKPPS = 0x0E  'RB6->MSSP:SCL

    LOCKPPS
  End sub

; ----- Define Hardware settings
  ' Define I2C settings - CHANGE PORTS if required
  #define HI2C_BAUD_RATE 400
  #define HI2C_DATA PORTC.1
  #define HI2C_CLOCK PORTC.0
  'Initialise I2C Slave
  'I2C pins need to be input for SSP module
  Dir HI2C_DATA in
  Dir HI2C_CLOCK in
 'MASTER
  HI2CMode Master

 ' THIS CONFIG OF THE SERIAL PORT WORKS WITH A  MAX232 (or equiv) THEN TO PC
 ' USART settings - CHANGE PORTS if required
 #define USART_BAUD_RATE 9600
 Dir PORTb.7 Out
 Dir PORTb.5 In
 #define USART_TX_BLOCKING
 wait 500 ms


  Dim DISPLAYNEWLINE as Byte


; ----- Main body of program commences here.
  ' Now assumes Serial Terminal is operational
  dim DeviceID as byte

  HSerPrintCRLF
  HSerPrint "Hardware I2C "
  HSerPrintCRLF 2

      ' Now assumes Serial Terminal is operational
      HSerPrintCRLF
      HSerPrint "   "
      'Create a horizontal row of numbers
      for DeviceID = 0 to 15
        HSerPrint hex(deviceID)
        HSerPrint " "
      next

      'Create a vertical column of numbers
      for DeviceID = 0 to 255
        DisplayNewLine = DeviceID % 16
        if DisplayNewLine = 0 Then
          HSerPrintCRLF
          HserPrint hex(DeviceID)
          if DisplayNewLine > 0 then
            HSerPrint " "
          end if
        end if
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        if HI2CWaitMSSPTimeout <> True then

          'Send to address to device
          HI2CSend ( deviceID )

          'Did device fail to respond?
          if HI2CAckPollState = false then
            HI2CSend ( 0 )
            HSerPrint   hex(deviceID)
          Else
            HSerPrint "--"
          end if

          'Do a stop.
          HI2CStop

        end if

      next

      HSerPrintCRLF 2
      HSerPrint   "End of Search"
      HSerPrintCRLF 2
      wait 1 s
      END


; ----- Support methods.  Subroutines and Functions
