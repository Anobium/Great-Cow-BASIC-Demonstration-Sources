'''
'''******************************************************************
'''
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Date: 13.3.2016
'''


' ----- Configuration
'Chip Settings.
#CHIP 16f18855,32
#OPTION Explicit

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.2
'PinManager data: 09/02/2017
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS

    'Module: EUSART
    'TX > RC0
    RC0PPS = 0x0010
    'RC0 > TX (bi-directional)
    TXPPS = 0x0008
    'Module: MSSP1
    'RC3 > SDA1
    SSP1DATPPS = 0x0013
    'SDA1 > RC3 (bi-directional)
    RC3PPS = 0x0015
    'SCL1 > RC4
    RC4PPS = 0x0014
    'RC4 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x0014

    LOCKPPS
End Sub
'Template comment at the end of the config file



#DEFINE SWITCH_DOWN         0
#DEFINE SWITCH_UP           1

#DEFINE SWITCH      PORTA.5

#DEFINE USART_BAUD_RATE 19200
#DEFINE USART_TX_BLOCKING
#DEFINE sync SYNC_TX1STA

' ----- Define Hardware settings for hwi2c
' Define I2C settings - CHANGE PORTS if required for your specific device.
#DEFINE hi2c_BAUD_RATE 400
#DEFINE hi2c_DATA PORTC.3
#DEFINE hi2c_CLOCK PORTC.4
'Initialise I2C Master
'I2C pins need to be input for SSP2 module
Dir hi2c_DATA In
Dir hi2c_CLOCK In

HI2CMode Master

' ----- Main body of program commences here.
' Now assumes Serial Terminal is operational
Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte

Do
    HSerPrintCRLF
    HSerPrint "Hardware I2C "
    HSerPrintCRLF 2

    ' Now assumes Serial Terminal is operational
    HSerPrintCRLF
    HSerPrint "   "
    'Create a horizontal row of numbers
    For DeviceID = 0 To 15
        HSerPrint Hex(deviceID)
        HSerPrint " "
    Next

    'Create a vertical column of numbers
    For DeviceID = 0 To 255
        DisplayNewLine = DeviceID % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(DeviceID)
            If DisplayNewLine > 0 Then
                HSerPrint " "
            End If
        End If
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        If HI2CWaitMSSPTimeout <> TRUE Then

            'Send to address to device
            HI2CSend ( deviceID )

            'Did device fail to respond?
            If HI2CAckpollState = FALSE Then
                HI2CSend ( 0 )
                HSerPrint   Hex(deviceID)
            Else
                HSerPrint "--"
            End If

            'Do a stop.
            HI2CStop
        Else
            HSerPrint "! "
        End If

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2
    Wait 1 s
    Wait While switch = On
Loop

' ----- Support methods.  Subroutines and Functions
